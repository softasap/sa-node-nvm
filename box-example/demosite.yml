---
  - include: use/__detect_node_path.yml
    tags:
      - update
      - create

  - name: DemoApp | Dump mounts
    command: /bin/mount
    register: machine_mounts
    tags:
      - create
      - update

  - name: DemoApp | Create directory
    action: file dest={{install_dir}} owner={{deploy_user}} group={{deploy_user}} mode=755 state=directory
    when: "'{{install_dir}}' not in machine_mounts.stdout"
    become: yes
    with_items:
      - "{{install_dir}}"
      - "{{install_dir_api}}"
      - "{{install_dir_client}}"
    tags:
      - create
      - update

  - name: DemoApp | Deploy application (checkout from repo, download tarball whatever)
    copy: src="{{item}}" dest="{{install_dir}}" owner="root" group="{{deploy_user}}" mode="u=rw,g=r,o=r"
    with_items:
      - "{{root_dir}}/files/yourapp/server"
      - "{{root_dir}}/files/yourapp/client"
    become: yes
    tags:
      - create
      - update


  - name: DemoApp | Create log dir
    file: dest={{log_file_path}} owner={{deploy_user}} group={{deploy_user}} mode=755 state=directory
    tags:
      - api

  - name: DemoApp | Install node modules
    shell: npm update
    args:
      chdir: "{{install_dir_api}}"
    environment:
      PATH: "{{npm_path_detected}}:{{ ansible_env.PATH }}"
    tags:
      - api
      - update

  - name: DemoApp |Copy upstart script
    template: src="{{root_dir}}/templates/api/upstart.conf.j2" dest=/etc/init/{{api_upstart_name}}.conf
    when: ansible_service_mgr == "upstart"
    become: yes
    tags:
      - api
      - update

  - name: DemoApp |Copy systemd script
    template: src="{{root_dir}}/templates/api/systemd.service.j2" dest=/etc/systemd/system/{{api_upstart_name}}.service
    when: ansible_service_mgr == "systemd"
    become: yes
    tags:
      - api
      - update

  - name: DemoApp |Create pid dir
    file: path="/var/run/yourapp" state="directory" owner="{{deploy_user}}" group="root"
    become: yes
    tags:
      - api
      - update

  - name: DemoApp |Restart
    service: name={{api_upstart_name}} state=restarted
    become: yes
    tags:
      - api
      - update

  - name: DemoApp |Configure monit api monitoring
    template: src={{root_dir}}/templates/monit/monit.conf.j2 dest=/etc/monit/conf.d/{{item.api_upstart_name}}.conf
    become: yes
    tags:
      - api
      - update
    with_items:
      - {
          api_upstart_name: "{{api_upstart_name}}",
          port_number: "{{api_port}}"
        }

  - name: DemoApp | Remove default website
    file: path="/etc/nginx/conf.d/default.conf" state="absent"
    become: yes
    tags:
      - create
      - update


  - name: DemoApp | configure web startup
    template: src="{{root_dir}}/templates/nginx/site.conf.j2" dest="/etc/nginx/sites-available/{{app_domain}}"
    become: yes
    tags:
      - create
      - update

  - name: DemoApp | Enable sites
    command: ln -fs /etc/nginx/sites-available/{{app_domain}} /etc/nginx/sites-enabled/{{app_domain}} creates=/etc/nginx/sites-enabled/{{app_domain}}
    become: yes
    tags:
      - create
      - update

  - name: DemoApp | Restart
    service: name="nginx" state=restarted
    become: yes
    tags:
      - create
      - update
